FluxBox[T]:{
  readOnly .set(fn: EditF[mdf T]): Void,
}
SwapF[T]:{ #(old: mdf T): mdf T }
FluxBox:{
  #[T](initialState: iso T): FluxBox[iso T],
  .immBox(initialState: T): FluxBox[T]
}

Mutex[T]:{
  readOnly .lock[R](fn: mut MutexFn[lent T, mdf R]): mdf R,
}
MutexFn[T]:{ #[R](x: mdf T): mdf R, }

// Log example from Marco
.var stuff: mut List[mut Box[iso Stuff]] = {...}
.do {runInParallel(stuff)} //runInParallel takes a readOnly List
.return {stuff.stream().reduce{..}}

runInParallel(data: readOnly List[readOnly Box[iso Stuff]])->
  data.stream().map{box->box.swap { myIso->myIso.mutStuff()  }}
