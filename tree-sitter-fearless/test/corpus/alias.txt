===========
Basic alias
===========

package test
alias base.F as F,

-----------

(source_file
  (package
    name: (packagePath))
  (alias
    from: (type
      package: (packagePath)
      name: (typeName))
    to: (typeName)))

=============
Generic alias
=============

package test
alias base.LList[base.Str] as Path,

-------------

(source_file
  (package
    name: (packagePath))
  (alias
    from: (type
      package: (packagePath)
      name: (typeName)
      generic: (genericList
        (generic
          type: (type))))
    to: (typeName)))

===================
Multi package alias
===================

package test
alias one.two.Tree as Tree,

-----------

(source_file
  (package
    name: (packagePath))
  (alias
    from: (type
      package: (packagePath)
      name: (typeName))
    to: (typeName)))

=================
"as" in type name
=================

package test
alias time.Was as Was,

-----------------

(source_file
  (package
    name: (packagePath))
  (alias
    from: (type
      package: (packagePath)
      name: (typeName))
    to: (typeName)))

======================
Generic alias with mdf
:error
======================

package test
alias base.LList[base.Str: mut] as Path,

----------------------

