Ref:{ #[X](x: mdf X): mut Ref[mdf X] -> this#(x) }
Ref[X]:NoMutRead[X],Sealed{
  read * : recMdf X,
  mut .swap(x: mdf X): mdf X,
  mut :=(x: mdf X): Void -> Let#{ .var -> this.swap(x), .in(_)->Void }
  mut <-(f: UpdateRef[mdf X]): Void -> this := f#(this*)
}
UpdateRef[X]:{ mut #(x: mdf X): mdf X }

--------------------------------
Ref:{//fully inferred below
  imm #[X](x:mdf X): mut Ref[mdf X] -> this#(x) //magic
  }
Ref[X]:NoMutRead[X],Sealed{
  read * : recMdf X,  // get (magic)
  mut .swap(x: mdf X): mdf X, // swap (magic)
  mut :=(x: mdf X): imm Void ->Let#{ .var -> this.swap(x), .in(_)->Void }
}