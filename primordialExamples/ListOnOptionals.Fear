// List implemented with options (donâ€™t actually do this, more matching than needed.
// We can make list similar to optional with a Cons/Nil case for a better UX)

List[E]:NoMutHyg[E]{
  readOnly .get: mut Opt[recMdf E] -> {},
  readOnly .cons: mut Opt[mut List[redMdf E]] -> {},   //tail
  }

User:{
  .emptyList: List[Num] -> {},
  .singleList: List[Num] -> { .get -> Opt#100 },
  .twoItems: List[Num] -> { .get -> Opt#100, cons: Opt#{ .get -> Opt#50 } },
  }