package base

// TODO:
//Assert:Sealed{
//  !(assertion: Bool): Void -> assertion ? {
//    .then -> {},
//    .else -> this._fail
//    },
//  !(assertion: Bool, msg: Str): Void -> assertion ? {
//    .then -> {},
//    .else -> this._fail(msg)
//    },
//  ._fail: Void -> this._fail,
//  ._fail(msg: Str): Void -> this._fail(msg),
//  }

Assert:Sealed{
  recMdf #(assertion: Bool): Void -> this#(assertion, { Void }),
  recMdf #[R](assertion: Bool, cont: recMdf AssertCont[mdf R]): recMdf R -> assertion.look(recMdf BoolView[recMdf R]{
    .then -> cont#,
    .else -> Assert._fail[recMdf R]()
    }),
  recMdf #[R](assertion: Bool, msg: Str, cont: recMdf AssertCont[mdf R]): recMdf R -> assertion.look(recMdf BoolView[recMdf R]{
    .then -> cont#,
    .else -> Assert._fail[recMdf R](msg)
    }),
  ._fail[R]: mdf R -> this._fail,
  ._fail[R](msg: Str): mdf R -> this._fail(msg),
  }
AssertCont[R]:{ recMdf #: recMdf R }
