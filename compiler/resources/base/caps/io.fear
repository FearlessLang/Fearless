package base.caps
alias base.LList[base.Str] as Path,

/// Capability for reading and writing to files and devices, including stdout and stderr.
/// This capability is for local IO, there is a different capability for network IO and IPC IO.
IO: {
  mut .print(msg: Str): Void,
  mut .println(msg: Str): Void,
  mut .printErr(msg: Str): Void,
  mut .printlnErr(msg: Str): Void,
//  mut .path(path: Path): mut base.caps.fs.FS,
  }
FIO:F[mut System, mut IO],Sealed{
  s -> {
    .print(msg) -> Magic!,
    .println(msg) -> Magic!,
    .printErr(msg) -> Magic!,
    .printlnErr(msg) -> Magic!,
//    .path(path) -> {
//      // ...
//      },
//    mut .fopen(path: Path, mode: FileHandleMode): mut base.caps.fs.RawFileHandle -> Magic!,
    }
  }

FileHandleMode:Stringable,Sealed{}
Read:FileHandleMode{ "r" }
Write:FileHandleMode{ "r+" }
Create:FileHandleMode{ "w+" }
