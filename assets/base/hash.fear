package base

/// Hash functions are only required to be consistent for the duration of the execution of one program.
ToHash: {
  read .hash(hasher: mut Hasher): mut Hasher,
  }

Hasher: {
  mut .compute: Nat,

  mut .nat(x: read Nat): mut Hasher,
  mut .int(x: read Int): mut Hasher,
  mut .float(x: read Float): mut Hasher,
  mut .byte(x: read Byte): mut Hasher,
  mut .str(x: read Str): mut Hasher,
  mut .hash(x: read ToHash): mut Hasher -> x.hash(this),
  }

/// Implementation defined hash algorithm with no security guarantees.
CheapHash: Hasher{
  .compute -> Magic!,
  .nat(x) -> Magic!,
  .int(x) -> Magic!,
  .float(x) -> Magic!,
  .byte(x) -> Magic!,
  .str(x) -> Magic!,
  }
