package base.caps

/// This try-catch will catch non-deterministic errors.
CapTries: F[mut System, mut CapTry]{sys -> mut CapTry: {
  /// This method upholds strong exception safety, so you can observe changes to the program state
  /// from any exception-causing code.
  mut #[R](try: read TryBody[R]): mut Res[R, Info] -> Magic!,
  /// This method gets the system object capability, however any violations of strong exception safety
  /// can only be observed with an object capability because System is the only external mutable reference.
  mut .withSys[R](try: read TryBodySys[R]): mut Res[R, Info] -> Magic!,
  }}

TryBody[R]: {read #: R}
TryBodySys[R]: {read #(system: mut System): R}
