package base

Bytess: {
  .fromList(list: read List[Byte]): Bytes -> Magic!,
  }

/// Bytes internal representation can vary, sometimes it refers to a byte array
/// within memory, sometimes to a file, sometimes to a network stream, etc.
/// If the data-source is in memory and imm, turn it into a list and use that instead.
Bytes: {
  mut .read(i: Nat): Byte -> Error.msg ("The index "+(i.str)+" is out of bounds."),
  mut .list: List[Byte] -> List#,
  // TODO: flow, sublist views, etc.

  read .size: Nat -> 0,
  read .isEmpty: Bool -> True,
  }
